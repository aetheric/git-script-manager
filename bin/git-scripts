#!/bin/sh

loc="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
repodir=$HOME/.git/script-repos
bindir=$HOME/.git/script-bin

# ===== FUNCTION DEFINITIONS =================

# git scripts get tzrlk/git-extras git-switch
function get {

	reponame=$1
	branchname=$2

	if [ -z "$1" ]; then
		echo "You need to specify a github user/repo to fetch"
		return 1
	fi

	if [ -z "$2" ]; then
		echo "You should really pick a tagged release to use."
		echo "We'll just use master for the time being, however"
		branchname=master
	fi

	echo "Retrieving ${reponame}@${branchname} from github..."
	repo_dir="${repodir}/${reponame}"
	
	#check if not cloned.
	if [ ! -d "$repo_dir/.git" ]; then
		mkdir -p $repo_dir
		git -C $repo_dir init
		git -C $repo_dir remote add origin https://github.com/${reponame}.git
	fi

	echo Retrieving latest updates
	git -C $repo_dir fetch origin --prune

	echo Checking-out ${branchname}...
	git -C $repo_dir checkout $branchname

}

# git scripts activate tzrlk/git-extras git-switch git-switch
function on {

	reponame=$1
	scriptpath=$2
	scriptname=$3

	mkdir -p ${bindir}
	echo Creating symlink for ${repodir}/$reponame/$scriptpath to ${bindir}/$scriptname
	ln -s "${repodir}/$reponame/$scriptpath" ${bindir}/$scriptname

}

# git scripts deactivate git-switch
function off {

	scriptname=$1
	
	echo Removing ${scriptname} from active scripts
	rm -f "${bindir}/${scriptname}"

}

# git scripts purge tzrlk/git-extras
function purge {

	reponame=$1

	repo_dir="${repodir}/${reponame}/.git"

	echo Removing ${reponame} from stored repos
	rm -rf $repo_dir

}

# git scripts list
function list {

	echo Listing all stored repos.
	ls -R "${repodir}"

	echo Listing all active scripts.
	ls "${bindir}"

}

case "$1" in

	get)
		get $2 $3
		exit $?
		;;

	on)
		on $2 $3 $4
		exit $?
		;;

	off)
		off $2
		exit $?
		;;

	purge)
		purge $2
		exit $?
		;;

	list)
		list
		exit $?
		;;

	*)
		echo "Unknown command $1. Available commands: get, on, off, purge, list"
		exit 1
	;;

esac

